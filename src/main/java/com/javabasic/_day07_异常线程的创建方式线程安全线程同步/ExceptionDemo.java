package com.javabasic._day07_异常线程的创建方式线程安全线程同步;

/**
 * @ClassName ExceptionDemo
 * @Description TODO
 * @Author bill
 * @Date 2021/7/8 16:15
 * @Version 1.0
 * 什么是异常？
 * 异常是程序在"编译"或者"执行"的过程中可能出现的问题。
 * 异常是应该尽量提前避免的。
 * 异常可能也是无法做到绝对避免的，异常可能有太多情况了，开发中只能提前干预！！
 * 异常一旦出现了，如果没有提前处理，程序就会退出JVM虚拟机而终止，开发中异常是需要提前处理的。
 * ----
 * 研究异常并且避免异常，然后提前处理异常，体现的是程序的安全, 健壮性！！！
 * ----
 * Java会为常见的代码异常都设计一个类来代表。
 * ----
 * 异常的体系:
 * Java中异常继承的根类是：Throwable。
 * ---
 * -------Throwable(根类，不是异常类)
 * --------/              \
 * -----Error           Exception（异常，需要研究和处理）
 * ----------------------/                   \
 * ------------------编译时异常          RuntimeException(运行时异常)
 * -
 * -
 * Error : 错误的意思，严重错误Error，无法通过处理的错误，一旦出现，程序员无能为力了，
 * ----只能重启系统，优化项目。
 * ----比如内存奔溃，JVM本身的奔溃。这个程序员无需理会。
 * ----
 * Exception:才是异常类，它才是开发中代码在编译或者执行的过程中可能出现的错误，
 * 它是需要提前处理的。以便程序更健壮！
 * -----
 * Exception异常的分类:
 * -----1.编译时异常：继承自Exception的异常或者其子类，编译阶段就会报错，
 * ---------必须程序员处理的。否则代码编译就不能通过！！
 * -----2.运行时异常: 继承自RuntimeException的异常或者其子类，编译阶段是不会出错的，它是在
 * ---------运行时阶段可能出现，运行时异常可以处理也可以不处理，编译阶段是不会出错的，
 * ---------但是运行阶段可能出现，还是建议提前处理！！
 * 小结：
 * 异常是程序在编译或者运行的过程中可能出现的错误！！
 * 异常分为2类：编译时异常，运行时异常。
 * -- 编译时异常：继承了Exception,编译阶段就报错，必须处理，否则代码不通过。
 * -- 运行时异常：继承了RuntimeException,编译阶段不会报错，运行时才可能出现。
 * 异常一旦真的出现，程序会终止，所以要研究异常，避免异常，处理异常，程序更健壮!!
 * ======================================================================================================
 * ======================================================================================================
 * 运行时异常的概念:
 * 继承自RuntimeException的异常或者其子类，
 * 编译阶段是不会出错的，它是在运行时阶段可能出现的错误，
 * 运行时异常编译阶段可以处理也可以不处理,代码编译都能通过！！
 * ----
 * 1.数组索引越界异常: ArrayIndexOutOfBoundsException。                   arrs[3]
 * 2.空指针异常 : NullPointerException。                                  null.length()
 * ---------直接输出没有问题。但是调用空指针的变量的功能就会报错！！
 * 3.类型转换异常：ClassCastException。                                   Integer s=(Integer) "sfs";
 * 4.迭代器遍历没有此元素异常：NoSuchElementException。                    iterator.next() 在循环中出现多次
 * 5.数学操作异常：ArithmeticException。                                  10/0
 * 6.数字转换异常： NumberFormatException。                               Integer s = Integer.valueOf("dsfs");
 * ======================================================================================================
 * ======================================================================================================
 * 编译时异常：继承自Exception的异常或者其子类，没有继承RuntimeException
 * "编译时异常是编译阶段就会报错"，
 * 必须程序员编译阶段就处理的。否则代码编译就报错！！
 * 编译时异常的作用是什么：
 * 是担心程序员的技术不行，在编译阶段就爆出一个错误, 目的在于提醒!
 * 提醒程序员这里很可能出错，请检查并注意不要出bug。
 * 编译时异常是可遇不可求。遇到了就遇到了呗。
 * 小结：
 * 编译时异常是编译阶段就会报错的，继承了Exception,编译时
 * 异常是可遇不可求。遇到了就遇到了呗。
 * -----
 * 编译时异常编译阶段必须处理，否则代码编译不通过!!
 **/
public class ExceptionDemo {
    public static void main(String[] args) {

    }
}
